(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{173:function(t,s,a){"use strict";a.r(s);var e=a(0),i=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),a("ul",[a("li",[a("strong",[t._v("无向边：")]),t._v(" 若顶点"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mtext"),a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("i")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\ V_i")])],1)],1)],1),t._m(2)]),t._v(" 到顶点"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mtext"),a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("j")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\ V_j")])],1)],1)],1),t._m(3)]),t._v("之间没有方向，则称这条边为无向边(Edge),用无序偶对（"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mtext"),a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("i")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\ V_i")])],1)],1)],1),t._m(4)]),t._v(","),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mtext"),a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("j")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\ V_j")])],1)],1)],1),t._m(5)]),t._v("）表示。")]),t._v(" "),t._m(6),t._v(" "),t._m(7)]),t._v(" "),t._m(8),t._v(" "),a("ul",[a("li",[a("strong",[t._v("有向边：")]),t._v(" 若顶点"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mtext"),a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("i")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\ V_i")])],1)],1)],1),t._m(9)]),t._v(" 到顶点"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mtext"),a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("j")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\ V_j")])],1)],1)],1),t._m(10)]),t._v("之间有方向，则称这条边为向边(Edge),用有序偶对<"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mtext"),a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("i")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\ V_i")])],1)],1)],1),t._m(11)]),t._v(","),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mtext"),a("msub",[a("mi",[t._v("V")]),a("mi",[t._v("j")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\ V_j")])],1)],1)],1),t._m(12)]),t._v("> 表示。")]),t._v(" "),t._m(13),t._v(" "),t._m(14)]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),a("p",[t._v("在大多数情况下，路径指的是简单路径，而环指的是简单环。当两个顶点之间存在一条连接双方的路径时，我们称为一个顶点到另外一个顶点是连通的。")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"图的相关定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的相关定义","aria-hidden":"true"}},[this._v("#")]),this._v(" 图的相关定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"无向图定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无向图定义","aria-hidden":"true"}},[this._v("#")]),this._v(" 无向图定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.22222em"}},[this._v("V")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.22222em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord mathit"},[this._v("i")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),this._v("​")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.969438em","vertical-align":"-0.286108em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.22222em"}},[this._v("V")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.22222em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[this._v("j")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),this._v("​")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.22222em"}},[this._v("V")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.22222em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord mathit"},[this._v("i")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),this._v("​")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.969438em","vertical-align":"-0.286108em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.22222em"}},[this._v("V")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.22222em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[this._v("j")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),this._v("​")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("无向图：")]),this._v(" 若图中任意两个顶点之间的边都是无向边，则称该图为无向图。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("无向完全图：")]),this._v(" 无向图中，如果任意两个顶点之间都存在边，则称为图的无向完全图。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"有向图定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有向图定义","aria-hidden":"true"}},[this._v("#")]),this._v(" 有向图定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.22222em"}},[this._v("V")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.22222em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord mathit"},[this._v("i")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),this._v("​")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.969438em","vertical-align":"-0.286108em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.22222em"}},[this._v("V")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.22222em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[this._v("j")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),this._v("​")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.22222em"}},[this._v("V")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.22222em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord mathit"},[this._v("i")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),this._v("​")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.969438em","vertical-align":"-0.286108em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.22222em"}},[this._v("V")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.22222em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle cramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[this._v("j")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[this._v("​")])]),this._v("​")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("有向图：")]),this._v(" 若图中任意两个顶点之间的边都是有向边，则称该图为有向图。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("有向完全图：")]),this._v(" 有向图中，如果任意两个顶点之间都存在方向互为相反的边，则称为图的有向完全图。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"顶点和边的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顶点和边的关系","aria-hidden":"true"}},[this._v("#")]),this._v(" 顶点和边的关系")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("strong",[t._v("度数：")]),t._v(" 当两个顶点通过一条边相连时，称两个顶点是相邻的，并称这条边"),a("strong",[t._v("依附于")]),t._v("这两个顶点。某个顶点的度数即为依附于它的边的总数。")]),t._v(" "),a("li",[a("strong",[t._v("子图：")]),t._v(" 由一幅图的所有边的一个子集（以及它们所依附的所有顶点）组成的图。")]),t._v(" "),a("li",[a("strong",[t._v("路径：")]),t._v(" 由各个边依次连接的一系列顶点。")]),t._v(" "),a("li",[a("strong",[t._v("简单路径：")]),t._v(" 一条没有重复的路径。")]),t._v(" "),a("li",[a("strong",[t._v("环路径：")]),t._v(" 一条至少含有一条边且起点和终点相同的路径。")]),t._v(" "),a("li",[a("strong",[t._v("简单环路径：")]),t._v(" 一条（除起点和终点必须相同之外）不含有重复顶点和边的环。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[this._v("路径的长度是路径上的边数。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"连通图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连通图","aria-hidden":"true"}},[this._v("#")]),this._v(" 连通图")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("strong",[t._v("连通图：")]),t._v(" 如果对于图中任意两个顶点，都有路径连通，则这幅图为连通图。")]),t._v(" "),a("li",[a("strong",[t._v("极大连通子图：")]),t._v(" 具有极大顶点数的连通子图。")]),t._v(" "),a("li",[a("strong",[t._v("无向图中的连通分量：")]),t._v(" 无向图中的极大连通子图称为连通分量。连通分量要满足一下条件：\n"),a("ul",[a("li",[t._v("要是子图")])]),t._v(" "),a("ul",[a("li",[t._v("子图要连通")]),t._v(" "),a("li",[t._v("连通子图含有极大顶点数")]),t._v(" "),a("li",[t._v("具有极大顶点数的连通子图包含依附于这些顶点的所有边")])])]),t._v(" "),a("li",[a("strong",[t._v("有向图中的强连通分量：")]),t._v(" 有向图中的极大连通子图称为强连通分量。连通分量要满足一下条件：\n"),a("ul",[a("li",[t._v("要是子图")])]),t._v(" "),a("ul",[a("li",[t._v("子图要连通")]),t._v(" "),a("li",[t._v("连通子图含有极大顶点数")]),t._v(" "),a("li",[t._v("具有极大顶点数的连通子图包含依附于这些顶点的所有边")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"连通图的生成树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连通图的生成树","aria-hidden":"true"}},[this._v("#")]),this._v(" 连通图的生成树")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("连通图的生成树是一个极小的连通子图，它含有图中全部的 n 个顶点，但只有足以构成一棵树的n-1条边。所以在无向图中"),s("strong",[this._v("连通图且有n个顶点n-1条边叫生成树")]),this._v("，在有向图中，一个顶点入度为0，其余顶点入度为1的叫有向树。一个有向图由若干棵有向树构成"),s("strong",[this._v("生成森林")]),this._v("。")])}],!1,null,null,null);s.default=i.exports}}]);