(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{211:function(n,r,t){"use strict";t.r(r);var s=t(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"spring-整体架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-整体架构","aria-hidden":"true"}},[n._v("#")]),n._v(" Spring 整体架构")]),n._v(" "),t("p",[n._v("Spring 框架是一个分层架构，它包含一系列的功能要素，并被分为大约20个模块，")]),n._v(" "),t("ul",[t("li",[t("strong",[n._v("Core Container")]),t("br"),n._v("\nCore Container（核心容器）包含有spring-core、spring-beans、spring-context、spring-expression模块。"),t("br"),n._v(" "),t("strong",[n._v("spring-core")]),n._v("模块主要包含Spring框架基本的核心工具类，Spring的其他组件都要使用到这个包里面的类，spring-core模块是其他组件的基本核心。"),t("br"),n._v(" "),t("strong",[n._v("spring-beans")]),n._v("模块主要包含访问配置文件、创建和管理bean以及进行控制反转（Inversion of Control）和依赖注入（Dependency Injection）相关的所有类。"),t("br"),n._v(" "),t("strong",[n._v("spring-context")]),n._v("模块依赖于spring-core和spring-beans，它继承了Beans的特性，为Spring框架提供了大量的扩展，添加了对时间传播、资源加载和对Context的透明创建的支持。"),t("strong",[n._v("ApplicationContext")]),n._v("接口是Context模块的关键，spring-context-support提供了对第三方包的集成支持…。"),t("br"),n._v(" "),t("strong",[n._v("spring-expression")]),n._v("模块提供了一个强大的表达式语言，用于在运行时查询和操纵对象，该语言支持设置/获取属性的值、属性的分配，方法的调用，访问数组上下文、容器和索引器、逻辑和算术运算符、命名变量以及从Spring的IOC容器中根据名称检索对象。它也支持list的投影、list的选择、一般的list聚合。")])])])}],!1,null,null,null);r.default=e.exports}}]);