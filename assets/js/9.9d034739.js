(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{183:function(t,a,e){"use strict";e.r(a);var r=e(0),i=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/algorithm/dynamic/example/ClimbingStairs.html"}},[t._v("有n个台阶的楼梯，每次只能上 1个 或者 2个台阶，那么到达顶端共有多少种不同的方法")])],1),t._v(" "),t._m(2),t._v(" "),e("p",[e("router-link",{attrs:{to:"/algorithm/dynamic/example/MinPathSum.html"}},[t._v("给定一个矩阵m, 从左上角开始每次只能向右或者向下走,最后到达右下角的位置,路径上所有的数值累加起来就是路径和,返回所有的路径中最小的路径和")])],1)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"动态规划示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态规划示例","aria-hidden":"true"}},[this._v("#")]),this._v(" 动态规划示例")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"台阶问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#台阶问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 台阶问题")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"矩阵的最小路径和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#矩阵的最小路径和","aria-hidden":"true"}},[this._v("#")]),this._v(" 矩阵的最小路径和")])}],!1,null,null,null);a.default=i.exports}}]);